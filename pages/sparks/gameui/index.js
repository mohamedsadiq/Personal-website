
import { useState } from "react";
import Head from "next/head";
import Script from "next/script";
import BackButton from "../../../components/backButton";
import { motion, AnimatePresence } from "framer-motion";

export default function GameUi() {
  const [state, setState] = useState({
    isAnimating: false,
    buttonColor: "#f4f4f5",
    rotation: 0,
    currentTitleIndex: 0,
    opacityIcon: 1,
  });

  const titles = ["Watch", "Mac", "iPad", "iPhone"];
 

  const handleClick = () => {
    setState((prevState) => ({
      ...prevState,
      isAnimating: true,
      buttonColor: "#fff",
      opacityIcon: 0.1,
      currentTitleIndex: (prevState.currentTitleIndex + 1) % titles.length,
    }));

    setTimeout(() => {
      setState((prevState) => ({
        ...prevState,
        isAnimating: false,
        buttonColor: "#f4f4f5",
        opacityIcon: 1,
      }));
    }, 250);
  };

  const textVariants = {
    initial: {
      opacity: 0,
      filter: "blur(0px)",
    },
    animate: {
      opacity: 1,
      transition: {
        duration: 1,
        filter: "blur(10px)",
      },
    },
    exit: {
      opacity: 0,
      transition: {
        duration: 0.3,
      },
      top: "-4px",
      rotate: "-40deg",
      filter: "blur(4px)",
    },
  };

  return (
    <>
      <Head>
        <title> Game controll UI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="container inner_container_sparks_parent">
          <BackButton title={""} />
          <div className="inner_container inner_container_sparks">
            <h2> Game controll UI</h2>
            <p>
              The Quick Button is an interactive UI component designed to enhance user engagement through dynamic animations. Built using <span className="spark_tools">React</span>, <span className="spark_tools">Framer Motion</span> and <span className="spark_tools">Tailwind CSS</span>, this button offers a visually appealing experience by incorporating smooth transitions and state changes upon user interaction.
            </p>
            <div className="exp" style={{ height: "400px" }}>
             
            </div>
           
          </div>
        </div>
      </main>
      <Script
        src="https://www.googletagmanager.com/gtag/js?id=G-H699TZ29QW"
        strategy="afterInteractive"
        />
        <Script id="google-analytics" strategy="afterInteractive">
        {`
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
          gtag('config', 'G-H699TZ29QW');
        `}
        </Script> 
    </>
  );
}



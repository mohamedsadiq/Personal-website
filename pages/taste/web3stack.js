import Head from 'next/head'
import Image from 'next/image'
import Script from 'next/script'
import {useState} from "react"
import Link from 'next/link';
// images Wallets
import Rainbow from "../../img/wallets/rain.png"
import Coinbase from "../../img/wallets/Coinbase.png"
import Metamask from "../../img/wallets/Metamask.png"
import Ledger from "../../img/wallets/Ledger.png"
import Trustwallet from "../../img/wallets/Trustwallet.png"
import Gnosis_Safe from "../../img/wallets/Gnosis Safe.png"
// images Daos
import DeveloperDao from "../../img/daos/Elliffpse 4.png"
import VectorDAO from "../../img/daos/Ellipse 4.png"
import Fwb from "../../img/daos/Elliphgse 4.png"
import Citydao from "../../img/daos/Ellinhgge 4.png"
import Forefront from "../../img/daos/Elligbfgbfgpse 4.png"
import Syndicate from "../../img/daos/Ellipse fgsdgs4.png"

// images tools
import ValueApp from "../../img/tools/value.jpeg"
import Raritysniper from "../../img/tools/favicon.png"
import Snapshot from "../../img/tools/Group 122.png"
import Guild from "../../img/tools/L8tmHbzm_400x400.jpg"


export default function web3stack() {
//    const [all, setAll] = useState(true);

   const [table1 , setTable1] = useState(true);
   const [table2 , setTable2] = useState(false);
   const [table3 , setTable3] = useState(false);
   const [table4 , setTable4] = useState(false);
   const [table5 , setTable5] = useState(false);

   const switch1 = () => {
    setTable1(true);
    setTable2(false);
    setTable3(false);
    setTable4(false);
    setTable5(false);
   }
   const switch2 = () => {
    setTable1(false);
    setTable2(true);
    setTable3(false);
    setTable4(false);
    setTable5(false);
   }
   const switch3 = () => {
    setTable1(false);
    setTable2(false);
    setTable3(true);
    setTable4(false);
    setTable5(false);
   }
   const switch4 = () => {
    setTable1(false);
    setTable2(false);
    setTable3(false);
    setTable4(true);
    setTable5(false);
   }
   const switch5 = () => {
    setTable1(false);
    setTable2(false);
    setTable3(false);
    setTable4(false);
    setTable5(true);
   }
    
  

  return (
    <>
      <Head>
        <title>Web 3 Stack | Mohamed Sadiq</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
   
       <div className="container">
        <div className="inner_container">
        <div className="inner_nav">
            <span>Home  > </span>
            <span>Taste > </span>
            <span>Stack</span>
        </div>
          <h1>Stack</h1>
          <p>Here is a list of web3 tools, DAOs and Wallets.</p>
         
          <div className="filtter">
            <ul>
              
                <li onClick={ () => switch1()} className={table1 ?  "bottom_line  ": " "}>Wallets</li>
                <li onClick={ () => switch2()} className={table2 ?  "bottom_line  ": " "}>Daos</li>
                <li onClick={ () => switch3()} className={table3 ?  "bottom_line " : " "}>Productive</li>
                <li onClick={ () => switch4()} className={table4 ?  "bottom_line " : " "}>Design</li>
                <li onClick={ () => switch5()} className={table5 ?  "bottom_line " : " "}>Coding </li>
              
                <div className="fil">
                <svg width="17" height="17" viewBox="0 0 9 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M0.0593468 0.237069C-0.0276426 0.386095 -0.015166 0.559994 0.0717367 0.709091L0.0841265 0.721481L3.09002 4.93221V9.68947C3.09002 9.81372 3.16453 9.92549 3.26391 9.97513C3.30116 10 3.3509 10 3.40054 10C3.47506 10 3.53718 9.97513 3.5993 9.92549L5.12707 8.64612C5.20158 8.584 5.23884 8.4971 5.23884 8.4101V4.93221L8.24473 0.721474L8.25712 0.709084C8.34411 0.560059 8.35649 0.38616 8.26951 0.237063C8.18252 0.0880369 8.03348 0.0010409 7.85961 0.0010409H0.456895C0.295395 -0.0113489 0.133903 0.0880303 0.059377 0.237063L0.0593468 0.237069Z" fill="#383838"/>
                </svg>
            </div>
            </ul>
            
        </div>
        <div className={table1 ?  "trans statesOn" : "trans statesOff "}>
          <div className="inner_stack">
           
          {wallet.map(item => {
              return (
                  <a  key={item} href={item.link} target="_blink">
                      <div key={item.name} className="block">
                      <div className="top_block">
                        <div className="logo_stack">
                        <Image
                            src={item.img}
                            alt="Picture of the author"
                            objectFit='cover'
                            layout='fill'
                            objectPosition="center"
                            placeholder="blur"
                            quality={100}
                            />
                        </div>
                        <div className='arrow'> 
                                <svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M33.2126 3.04953L33.2126 22.4767L35 22.4767L35 0.00128174L12.5233 0.00128076L12.5233 1.78628L31.9498 1.78871L-2.56206e-06 33.7356L1.26325 34.9988L33.2126 3.04953Z" fill="#464646"/>
                                </svg>
                        </div>
                      </div>
                      <h1>{item.name}</h1>
                      <p>{item.description}</p>
                  </div>
                  </a>
              )
          })}
          </div>
          </div>
          <div className={table2 ?  "statesOn" : "statesOff "}>
    
          <div className="inner_stack">
          {Daos.map(item => {
              return (
                  <a  key={item} href={item.link} target="_blink">
                  <div className="block">
                       <div className="top_block">
                        <div className="logo_stack">
                        <Image
                            src={item.img}
                            alt="Picture of the author"
                            objectFit='cover'
                            layout='fill'
                            objectPosition="center"
                            placeholder="blur"
                            quality={100}
                            />
                        </div>
                        <div className='arrow'> 
                                <svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M33.2126 3.04953L33.2126 22.4767L35 22.4767L35 0.00128174L12.5233 0.00128076L12.5233 1.78628L31.9498 1.78871L-2.56206e-06 33.7356L1.26325 34.9988L33.2126 3.04953Z" fill="#464646"/>
                                </svg>
                        </div>
                      </div>
                      <h1>{item.name}</h1>
                      <p>{item.description}</p>
                  </div>
                  </a>
              )
          })}
          </div>
          </div>
          <div className={table3 ?  "statesOn " : "statesOff "}>
         
          <div className="inner_stack">
          {Tools.map(item => {
              return (
                <a key={item} href={item.link} target="_blink">
                  <div   className="block">
                       <div className="top_block">
                        <div className="logo_stack">
                        <Image
                            src={item.img}
                            alt="Picture of the author"
                            objectFit='cover'
                            layout='fill'
                            objectPosition="center"
                            placeholder="blur"
                            quality={100}
                            />
                        </div>
                        <div className='arrow'> 
                                <svg width="35" height="35" viewBox="0 0 35 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M33.2126 3.04953L33.2126 22.4767L35 22.4767L35 0.00128174L12.5233 0.00128076L12.5233 1.78628L31.9498 1.78871L-2.56206e-06 33.7356L1.26325 34.9988L33.2126 3.04953Z" fill="#464646"/>
                                </svg>
                        </div>
                      </div>
                      <h1>{item.name}</h1>
                      <p>{item.description}</p>
                  </div>
                  </a>
              )
          })}
          </div>
          </div>
          <div className="container">
            <div className="inner_container inner_teste">
                <h2>More</h2>
                <div className="grid-teste grid">
                
                    <Link href="/taste/aesthetic">
                    <div className="teste_box">
                        <div className="inner_taste_box">
                        <svg  style={{width:"40px"}}viewBox="0 0 402 611" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M200.767 505.867C258.22 505.867 313.183 480.976 351.34 437.627C383.695 400.913 401.533 353.835 401.533 305.096C401.533 256.357 383.695 209.481 351.34 172.565C313.179 129.216 258.215 104.325 200.767 104.325C143.319 104.325 88.3507 129.216 50.1933 172.565C17.8387 209.273 0 256.357 0 305.096C0 353.835 17.8387 400.919 50.1933 437.627C88.3547 480.976 143.319 505.867 200.767 505.867ZM193.095 148.707C193.095 144.352 196.621 140.826 200.975 140.826C205.329 140.826 208.855 144.352 208.855 148.707V297.427H279.377C283.731 297.427 287.257 300.953 287.257 305.307C287.257 309.661 283.731 313.187 279.377 313.187H200.767C196.413 313.187 192.887 309.661 192.887 305.307V148.707L193.095 148.707Z" fill="white"/>
                            <path d="M345.954 144.973L333.303 60.1453C328.116 25.9213 298.251 0 263.615 0H137.719C103.083 0 73.2139 25.9267 68.0312 60.1453L55.5781 144.973C95.1928 108.885 147.047 88.7653 200.765 88.7653C254.691 88.7653 306.338 109.093 345.951 144.973H345.954Z" fill="white"/>
                            <path d="M55.5801 465.213L68.2311 550.041C73.4186 584.265 103.283 610.187 137.919 610.187H263.815C298.451 610.187 328.32 584.26 333.503 550.041L345.956 465.213C306.342 501.301 254.487 521.421 200.77 521.421C146.843 521.421 95.1962 501.093 55.5829 465.213H55.5801Z" fill="white"/>
                            </svg>
                        <h2>Aesthetic</h2>
                   
                         <p>From essays to videos and tweets, this page is a collection of learning materials that.</p>
                         <button>
                            <p>Enter</p>
                            <span>
                            <svg width="25" height="25" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.10675 7.13995C9.3289 7.3621 9.3215 7.71279 9.08751 7.91649L6.75277 9.95844C6.51879 10.1621 6.14788 10.1493 5.92573 9.92717C5.70358 9.70502 5.69077 9.33412 5.89447 9.10013L7.93641 6.7654C8.14011 6.53141 8.4908 6.52401 8.71295 6.74616L9.10675 7.13995Z" fill="black"/>
                                <path d="M6.91471 6.16017C6.69638 5.94183 6.76614 5.7629 7.08412 5.76253L9.52835 5.75962C9.83634 5.75925 10.0894 6.01234 10.0891 6.32034L10.0862 8.7745C10.0858 9.0825 9.90685 9.16225 9.68851 8.94391L6.90968 6.16508L6.91471 6.16017Z" fill="black"/>
                                <circle cx="8" cy="8" r="7.5" stroke="black"/>
                                </svg>
                            </span>
                         </button>
                        </div>
                    
                    </div>
                    </Link>
                    <Link href="/taste/books">
                        <div className="teste_box">
                        <div className="inner_taste_box">
                            <svg  version="1.1" fill="#fff" viewBox="0 0 700 700" xmlns="http://www.w3.org/2000/svg">
                            <path d="m602.61 328.55v66.418l-286.49 165.03-251.72-162.8c-49.215-31.832-62.906-95.777-12.223-124.98l51.43-29.625c-12.75-29.633-6.6875-62.562 25.762-81.258l280.07-161.33 270.38 172.47v111.61l-77.191 44.469zm-285.23 162.73-251.45-162.03c-28.297-18.238-23.609 22.883 4.2734 40.664l247 157.56 259.17-148.44v-35.371l-259 147.62zm77.809-136.82 258.38-141.25v54.941l-259.17 148.44-247.01-157.56c-27.879-17.785-26.141-80.469 2.7461-63.125l245.05 158.56z" fill-rule="evenodd"/>
                            </svg>
                        <h2>Books</h2>
                    
                         <p>From essays to videos and tweets, this page is a collection of learning materials that.</p>
                         <button>
                            <p>Enter</p>
                            <span>
                            <svg width="25" height="25" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.10675 7.13995C9.3289 7.3621 9.3215 7.71279 9.08751 7.91649L6.75277 9.95844C6.51879 10.1621 6.14788 10.1493 5.92573 9.92717C5.70358 9.70502 5.69077 9.33412 5.89447 9.10013L7.93641 6.7654C8.14011 6.53141 8.4908 6.52401 8.71295 6.74616L9.10675 7.13995Z" fill="black"/>
                                <path d="M6.91471 6.16017C6.69638 5.94183 6.76614 5.7629 7.08412 5.76253L9.52835 5.75962C9.83634 5.75925 10.0894 6.01234 10.0891 6.32034L10.0862 8.7745C10.0858 9.0825 9.90685 9.16225 9.68851 8.94391L6.90968 6.16508L6.91471 6.16017Z" fill="black"/>
                                <circle cx="8" cy="8" r="7.5" stroke="black"/>
                                </svg>
                            </span>
                         </button>
                        </div>
                        </div>
                    </Link>
                    <Link href="/taste/podcast">
                        <div className="teste_box">
                        <div className="inner_taste_box">
                        <svg viewBox="0 0 261 346" fill="#fff" xmlns="http://www.w3.org/2000/svg">
                        <path d="M130.488 228.375C148.495 228.375 165.765 221.222 178.498 208.489C191.231 195.756 198.384 178.487 198.384 160.479V67.8945C198.384 43.6375 185.444 21.2245 164.436 9.09502C143.428 -3.03168 117.548 -3.03168 96.5406 9.09502C75.5328 21.2245 62.5928 43.6382 62.5928 67.8945V160.479C62.5928 178.486 69.7463 195.756 82.479 208.489C95.2123 221.222 112.481 228.375 130.488 228.375V228.375ZM93.4544 54.7456C93.4544 46.5593 96.706 38.7117 102.492 32.9217C108.281 27.1351 116.132 23.8839 124.316 23.8839C127.725 23.8839 130.488 26.6477 130.488 30.0563C130.488 33.4648 127.725 36.2286 124.316 36.2286C119.406 36.2286 114.694 38.1795 111.222 41.6515C107.751 45.1234 105.799 49.8356 105.799 54.7453V172.824C105.799 176.232 103.036 178.996 99.6271 178.996C96.2186 178.996 93.4548 176.232 93.4548 172.824L93.4544 54.7456ZM235.418 148.135C235.465 174.926 225.262 200.721 206.898 220.235C188.536 239.744 163.406 251.491 136.661 253.067V333.307H173.695C177.103 333.307 179.867 336.071 179.867 339.479C179.867 342.888 177.103 345.652 173.695 345.652H87.2821C83.8736 345.652 81.1098 342.888 81.1098 339.479C81.1098 336.071 83.8736 333.307 87.2821 333.307H124.625L124.316 253.067C97.6844 251.813 72.5627 240.342 54.1698 221.042C35.777 201.74 25.5288 176.094 25.5591 149.429V148.134C25.5591 144.726 28.3229 141.962 31.7314 141.962C35.14 141.962 37.9038 144.726 37.9038 148.134V149.429C37.9203 173.636 47.5425 196.846 64.66 213.963C81.7774 231.08 104.987 240.702 129.194 240.719H130.489C155.043 240.719 178.594 230.965 195.957 213.603C213.319 196.24 223.074 172.689 223.074 148.134C223.074 144.726 225.838 141.962 229.246 141.962C232.655 141.962 235.418 144.726 235.418 148.134L235.418 148.135ZM260.108 86.4115C260.116 103.733 256.652 120.88 249.923 136.84C248.956 139.119 246.721 140.601 244.244 140.604C242.163 140.623 240.215 139.593 239.058 137.865C237.901 136.134 237.694 133.941 238.504 132.026C245.15 116.3 248.275 99.3098 247.655 82.2508C247.038 65.1884 242.693 48.4709 234.925 33.2686C234.093 31.7806 233.911 30.0143 234.426 28.3913C234.941 26.7655 236.104 25.4264 237.639 24.6879C240.675 23.1641 244.371 24.3765 245.911 27.4049C255.33 45.6411 260.201 65.8857 260.108 86.411L260.108 86.4115ZM22.723 132.58C23.376 134.101 23.3898 135.82 22.7643 137.352C22.1361 138.884 20.9209 140.1 19.3888 140.728C18.6228 141.039 17.8071 141.207 16.9805 141.221C14.506 141.218 12.2685 139.736 11.3041 137.457C4.36576 121.335 0.813945 103.961 0.871789 86.4116C0.882811 65.657 5.87858 45.2086 15.4371 26.7882C16.1177 25.212 17.4211 23.9914 19.0358 23.4182C20.6506 22.8423 22.4306 22.9663 23.9517 23.7544C25.4727 24.5452 26.597 25.934 27.0543 27.5846C27.5118 29.2379 27.261 31.0042 26.3627 32.4646C17.7405 49.1412 13.2329 67.6385 13.216 86.4122C13.1912 102.29 16.4262 118.004 22.7228 132.581L22.723 132.58ZM25.5611 86.4115C25.5336 70.4981 29.1433 54.7922 36.1148 40.4879C37.6165 37.421 41.3199 36.1507 44.3871 37.6497C47.4543 39.1487 48.727 42.8521 47.2253 45.9221C41.0612 58.5256 37.8729 72.3806 37.9061 86.4112C37.8923 98.3206 40.1767 110.119 44.6351 121.161C45.9054 124.316 44.3871 127.901 41.2403 129.185C38.0852 130.458 34.4975 128.94 33.2162 125.79C28.1544 113.278 25.5562 99.9082 25.5611 86.4115V86.4115ZM224.868 40.4879C237.876 67.2271 238.932 98.2292 227.766 125.793C226.485 128.943 222.897 130.461 219.742 129.188C216.596 127.904 215.077 124.319 216.348 121.164C220.806 110.123 223.09 98.3234 223.077 86.4139C223.11 72.3826 219.922 58.5284 213.757 45.9248C212.256 42.8552 213.529 39.1518 216.596 37.6525C219.662 36.1532 223.366 37.4238 224.868 40.4906L224.868 40.4879Z" fill="white"/>
                        </svg>

                        <h2>Podcast</h2>
                        <p>From essays to videos and tweets, this page is a collection of learning materials that.</p>
                         <button>
                            <p>Enter</p>
                            <span>
                            <svg width="25" height="25" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.10675 7.13995C9.3289 7.3621 9.3215 7.71279 9.08751 7.91649L6.75277 9.95844C6.51879 10.1621 6.14788 10.1493 5.92573 9.92717C5.70358 9.70502 5.69077 9.33412 5.89447 9.10013L7.93641 6.7654C8.14011 6.53141 8.4908 6.52401 8.71295 6.74616L9.10675 7.13995Z" fill="black"/>
                                <path d="M6.91471 6.16017C6.69638 5.94183 6.76614 5.7629 7.08412 5.76253L9.52835 5.75962C9.83634 5.75925 10.0894 6.01234 10.0891 6.32034L10.0862 8.7745C10.0858 9.0825 9.90685 9.16225 9.68851 8.94391L6.90968 6.16508L6.91471 6.16017Z" fill="black"/>
                                <circle cx="8" cy="8" r="7.5" stroke="black"/>
                                </svg>
                            </span>
                         </button>
                        </div>
                        </div>
                    </Link>
                </div>
            </div>
            </div>
        </div>
       </div>
       <Script
        src="https://www.googletagmanager.com/gtag/js?id=G-H699TZ29QW"
        strategy="afterInteractive"
      />
      <Script id="google-analytics" strategy="afterInteractive">
        {`
         window.dataLayer = window.dataLayer || [];
         function gtag(){dataLayer.push(arguments);}
         gtag('js', new Date());
 
         gtag('config', 'G-H699TZ29QW');
        `}
      </Script>
      </main>
  
</>
  )
}

const wallet = [
    {
        name:"Rainbow",
        img:Rainbow,
        description:"The fun, simple, & secure way to explore Web3, NFTs, & Ethereum.",
        link:"https://rainbow.me/"
    },
    {
        name:"Coinbase",
        img:Coinbase,
        description:"Self-custody, mobile crypto wallet and Web3 dapp browser.",
        link:"https://www.coinbase.com/wallet"
    },
    {
        name:"Metamask",
        img:Metamask,
        description:"A crypto wallet & gateway to blockchain apps.",
        link:"https://metamask.io/"
    },
    {
        name:"Ledger",
        img:Ledger,
        description:"The smartest way to secure, buy and exchange crypto.",
        link:"https://www.ledger.com/"
    },
    {
        name:"Trustwallet",
        img:Trustwallet,
        description:"Buy, store, collect NFTs, exchange & earn crypto.",
        link:"https://trustwallet.com/"
    },
    {
        name:"Gnosis Safe",
        img:Gnosis_Safe,
        description:"The most trusted platform to manage digital assets.",
        link:"https://gnosis-safe.io/"
    }
]

const Daos = [
    {
        name:"DeveloperDao",
        img:DeveloperDao,
        description:"Accelerate the education of a new wave of web3 builders.",
        link:"https://www.developerdao.com/"
    },
    {
        name:"VectorDAO",
        img:VectorDAO,
        description:"A collective of designers making Internet money easier to use.",
        link:"https://vectordao.com/"
    },
    {
        name:"FRIENDS with BENEFITS",
        img:Fwb,
        description:"A digital cornerstone between technology and culture.",
        link:"https://www.fwb.help/"
    },
    {
        name:"Citydao",
        img:Citydao,
        description:"Experiment in decentralized land ownership.",
        link:"https://citydao.io/"
    },
    {
        name:"Forefront",
        img:Forefront,
        description:"The port of entry to social clubs and digital cities.",
        link:"https://rainbow.me/"
    },
    {
        name:"Syndicate",
        img:Syndicate,
        description:"Decentralized investing protocol + social network.",
        link:"https://syndicate.io/"
    }
]


const Tools = [
    {
        name:"Value App",
        img:ValueApp,
        description:"A simple way to track the value of any NFT portfolio in real time.",
        link:"https://value.app/"
    },
    {
        name:"Rarity Sniper",
        img:Raritysniper,
        description:"The #1 source for NFT rarity.",
        link:"https://raritysniper.com/"
    },
    {
        name:"Snapshot",
        img:Snapshot,
        description:"Where decisions get made.",
        link:"https://snapshot.org/"
    },
    {
        name:"Guild",
        img:Guild,
        description:"Manage roles in your community based on tokens.",
        link:"https://guild.xyz/"
    },
   
]